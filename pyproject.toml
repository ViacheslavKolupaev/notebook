#  Copyright (c) 2022. Viacheslav Kolupaev, https://vkolupaev.com/
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

[build-system]
requires = [
    "setuptools>=60",
    "wheel",
    "setuptools_scm>=6.4"
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/boilerplate/_version.py"

[tool.mypy]
# See: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]
files = [
    "src/boilerplate",
    "tests"
]
exclude = [
    '^src\/boilerplate\/__init__\.py$',
    '^alembic\/env\.py$'
]

python_version = "3.10"  # specify major Python version.
follow_imports = "silent"
disable_error_code = "attr-defined"
verbosity = 0
show_error_codes = true
pretty = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true # for strict mypy

warn_unused_configs = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pydantic-mypy]
# See: https://pydantic-docs.helpmanual.io/mypy_plugin/#plugin-settings
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = [
    "uvicorn",
    "fastapi",
    "typeguard",
    "src.boilerplate.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"

# Directories that are not visited by pytest collector:
norecursedirs = [
    # pytest defaults.
    "*.egg",
    ".*",
    "_darcs",
    "build",
    "CVS",
    "dist",
    "node_modules",
    "venv",
    "{arch}",

    # Custom.
    "venv_py38",
    "venv_py39",
    "venv_py310",
    "src",
    "app",
    "docs",
    "package_scripts",
    "pdoc",
    "requirements",
    "settings",
    "site",
    ".eggs",
    "_build",
    ".tox",
    ".git",
    "__pycache__",
    "tmp*",
]

filterwarnings = [
    "ignore::DeprecationWarning",
]

# Command-line Flags: https://docs.pytest.org/en/latest/reference.html#command-line-flags
addopts = [
    "-ra",
    "-l",
    "-vv",
#    "--failed-first",
    "--tb=short",
    "--strict",
    "--durations=3",
    "--cov=src/boilerplate",
    "--cov-report=term-missing",
    "--cov-report=xml:coverage.xml",
#    "--cov-report=html:htmlcov",
    "--junit-xml=report.xml",
    "--hypothesis-show-statistics",
#   "--typeguard-packages=app",
]

timeout = 300
testpaths = [
    "tests",
]
python_files = "tests/test_*.py"
required_plugins = [
    "pytest-cov",
    "pytest-timeout",
]
#xfail_strict = true
markers = [
    # Usage: `pytest -m smoke`
    "smoke: marks a test as a smoke-test.",
    "fast: marks a test as a fast execution test.",
    "slow: marks a test as a slow execution test.",
    "db_dependent: marks a test as database dependent.",
    "network_dependent: marks a test as network dependent.",
    "requires_gpu: mark a test that requires a GPU to run.",
    "integration: marks a test that is meant to be used as integration testing.",
    "internal_data_sources: marks a test as a test of internal data sources.",
    "external_data_sources: marks a test as a test of external data sources.",
    # Docs: https://docs.pytest.org/en/latest/example/simple.html#incremental-testing-test-steps
    "incremental: mark for abort incremental-marked tests in a class.",
]

# Logging config.
# Usage: `pytest --capture=no`
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s | %(levelname)s | %(name)s | %(funcName)s:%(lineno)d | %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
